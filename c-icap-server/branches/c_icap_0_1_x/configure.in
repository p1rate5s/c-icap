dnl Process this file with autoconf to produce a configure script.

dnl AC_INIT(c_icap,m4_normalize(m4_include([VERSION.m4])))
AC_INIT(c_icap,0.1.1-pre2)
CICAPLIB_VERSION=0:1:0
AC_SUBST(CICAPLIB_VERSION)
dnl CICAPLIB_VERSION is the libtool current[:revision[:age]] version info
dnl libtool directions about version info
dnl - library source code has changed since the last update c:r:a => c:r+1:a
dnl - interfaces have been added, removed, or changed c:r:a => c+1:0:a
dnl - interfaces have been added c:r:a => c:r:a+1
dnl - interfaces have been removed  c:r:a => c:r:0

AC_CONFIG_SRCDIR(aserver.c)
AM_MAINTAINER_MODE
AM_CONFIG_HEADER(autoconf.h)

AM_INIT_AUTOMAKE([subdir-objects])

AC_PROG_CC
AM_PROG_CC_C_O

AC_DISABLE_STATIC
AC_LIBTOOL_DLOPEN
AC_LIBTOOL_WIN32_DLL
AC_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)

dnl AC_CANONICAL_HOST

dnl Checks for OS specific flags

case "$host_os" in
     solaris2.*)
          LIBS="-lsocket -lnsl"
	  TEST_LIBS=" -lrt"
      ;;
      cygwin*)
	MODULES_LIBADD="-L../../ -licapapi"
	AC_SUBST(MODULES_LIBADD)
	iscygwin="yes"
      ;;
esac

CFLAGS="$CFLAGS -Wall"


dnl Checking for posix threads libraries.....


case "$host_os" in
     linux*)
	CFLAGS="-D_REENTRANT $CFLAGS"
	THREADS_LDADD="-lpthread"
	THREADS_LDFLAGS=""
     ;;
     solaris2.*)
     	  CFLAGS="-D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS $CFLAGS"
	  THREADS_LDADD="-lpthread"
	  THREADS_LDFLAGS=""
      ;;
      freebsd5*)
## If I understand how all those threading models works correctly
## in FreeBSD I will make an option in configure script 
## --with-freebsd-threads={c_r,pthreads,linuxthreads,thr}
## If I am correct I must compile c-icap with the way 
## external libraries are compiled. (The clamav uses -lc_r and I had problems 
## using a different threading model)
 
##    FreeBSD linuxthreads flags
#      	CFLAGS="-D_THREAD_SAFE -I/usr/local/include/pthread/linuxthreads $CFLAGS"
#	THREADS_LDADD="-llthread -lgcc_r"
#	THREADS_LDFLAGS="-L/usr/local/lib"

##    FreeBSD Standard threads
      	CFLAGS="-pthread -D_THREAD_SAFE  $CFLAGS"
	THREADS_LDADD="-XCClinker -lc_r"
	THREADS_LDFLAGS=""
## FreeBSD has pthreads rwlocks from version 3 (I think)
#	AC_DEFINE(HAVE_PTHREADS_RWLOCK,1,[Define HAVE_PTHREADS_RWLOCK if pthreads library supports rwlocks])
##   1:1 threads 
#      	CFLAGS="-D_THREAD_SAFE  $CFLAGS"
#	THREADS_LDADD="-XCClinker -lthr"
#	THREADS_LDFLAGS=""

      ;;

      freebsd6*)
        CFLAGS="-D_THREAD_SAFE  $CFLAGS"
        THREADS_LDADD="-XCClinker -lthr"
        THREADS_LDFLAGS=""
      ;;

      cygwin*)
	CFLAGS="-D_REENTRANT $CFLAGS"
	THREADS_LDADD="-lpthread"
	THREADS_LDFLAGS="";
      ;;
      *)
      	CFLAGS="-D_REENTRANT $CFLAGS"
	THREADS_LDADD="-lpthread"
	THREADS_LDFLAGS=""
      ;;
esac

TEST_LIBS="$TEST_LIBS $THREADS_LDADD"
AC_SUBST(THREADS_LDADD)
AC_SUBST(THREADS_LDFLAGS)


AC_ARG_ENABLE(large_files,
[  --enable-large-files	Enable large files support],
[ if test $enableval = "yes"; then
    large_file_support="yes"
  fi
],
   [ large_file_support="no" ]
)

if test $large_file_support = "yes"; then
   CFLAGS="$CFLAGS -D_FILE_OFFSET_BITS=64"
#here I must put a check if the -D_FILE_OFFSET_BITS makes the off_t  an 64bit integer
# and if not supported warning the user
#Possibly checks for systems which supports large files using different defines....
#later .......
fi

USE_IPV6="0"
AC_ARG_ENABLE(ipv6,
[  --enable-ipv6	Enable ipv6 support],
[ if test $enableval = "yes"; then
    ipv6_support="yes"
    AC_DEFINE(HAVE_IPV6,1,[Define HAVE_IPV6 if OS supports ipv6])
    USE_IPV6="1"
  fi
],
   [ ipv6_support="no" ]
)
AC_SUBST(USE_IPV6)

USE_COMPAT="0"
AC_MSG_CHECKING([Keep library compatibility])
AC_ARG_ENABLE(lib_compat,
[  --enable-lib-compat	Enable library compatibility with older c-icap versions],
[ if test $enableval = "yes"; then
    lib_compat="yes"
    AC_MSG_RESULT(yes)
    USE_COMPAT="1"
  fi
],
   [ lib_compat="no"
     AC_MSG_RESULT(no)
    ]
)
AC_SUBST(USE_COMPAT)


# Checks for programs
AC_CHECK_PROG(has_doxygen, doxygen, "yes", "no")
if test a"$has_doxygen" == "ayes"; then
   doxygen_bin=doxygen
else
   doxygen_bin="echo Doxygen is not installed /"
fi
AC_SUBST(doxygen_bin)

# Checks for libraries

AC_ARG_WITH(perl, 
[  --with-perl		Path to perl binary],
[
case "$withval" in
  yes)
       perlbin="perl"
  ;;			     
  no )
       perlbin="";
       perlcore="";
  ;;
  * )
      perlbin=$withval
  ;;
  esac
],
[
   perlbin="";
   perlcore="";
]
)

if test a"$perlbin" != a; then 
	perlcore=`$perlbin -MConfig -e 'print $Config{archlib}'`/CORE;
        perllib=`$perlbin -MConfig -e 'print $Config{libs}'`;
        perlccflags=`$perlbin -MConfig -e 'print $Config{ccflags}'`;
	perlldflags=`$perlbin -MConfig -e 'print $Config{ccdlflags}'`;
fi



AC_SUBST(perlcore)
AC_SUBST(perllib)
AC_SUBST(perlccflags)
AC_SUBST(perlldflags)


AC_CHECK_LIB(dl,dlopen,DL_ADD_FLAG=" -ldl")
AC_SUBST(DL_ADD_FLAG)

AC_ARG_WITH(zlib,
[	--with-zlib	Path to zlib library],
[
case "$withval" in
     yes)
	zlib=yes;
     ;;
     no)
	zlib=no;
     ;;
     *)
	zlib=$withval;
     ;;
     esac
],
[ zlib=yes]
)

if test a"$zlib" != "ano"; then
   if test a"$zlib" != "ayes"; then
        OLDCFLAGS=$CFLAGS
        OLDLDFLAGS=$LDFLAGS
        CFLAGS="$CFLAGS -I$zlib/include"
        LDFLAGS="$LDFLAGS -L $zlib/lib"
	AC_CHECK_LIB(z,inflate,[ZLIB_ADD_LDFLAG="-L$zlib/lib -lz";ZLIB_ADD_FLAG="-I$zlib/include";AC_DEFINE(HAVE_ZLIB,1,[Define HAVE_ZLIB if zlib installed])],[zlib=no])
        CFLAGS=$OLDCFLAGS
        LDFLAGS=$OLDLDFLAGS
	AC_SUBST(ZLIB_ADD_LDFLAG)
	AC_SUBST(ZLIB_ADD_FLAG)	
   else
	AC_CHECK_LIB(z,inflate,[ZLIB_ADD_LDFLAG=" -lz";AC_DEFINE(HAVE_ZLIB,1,[Define HAVE_ZLIB if zlib installed])],[zlib=no])
	AC_SUBST(ZLIB_ADD_LDFLAG)
   fi
fi
if test a"$zlib" = "ano"; then
    AC_MSG_WARN("zlib required for the c-icap's internal filetype recognizer!")
fi

libdb="yes"
AC_ARG_WITH(bdb,
[  --with-bdb        Where to find Berkeley DB library ],
[ case "$withval" in
    yes)
         libdb="yes"
    ;;
    no )
         libdb="no"
    ;;
    * )
        libdb=$withval
    ;;
  esac
],
)

if test a"$libdb" != "ano"; then
   if test a"$libdb" != "ayes"; then
        OLDCFLAGS=$CFLAGS
        OLDLDFLAGS=$LDFLAGS
        CFLAGS="$CFLAGS -I$libdb/include"
        LDFLAGS="$LDFLAGS -L $libdb/lib"
      	AC_CHECK_LIB(db,  db_version, 
		     [BDB_ADD_LDFLAG="-L $libdb/lib -ldb"; BDB_ADD_FLAG="-I$libdb/include"; AC_DEFINE(HAVE_BDB, 1, [Define HAVE_BDB if berkeley DB is installed])], 
		     [libdb="no"]
		     )
        CFLAGS=$OLDCFLAGS
        LDFLAGS=$OLDLDFLAGS
	AC_SUBST(BDB_ADD_LDFLAG)
	AC_SUBST(BDB_ADD_FLAG)
   else
	AC_CHECK_LIB(db,  db_version, 
	 	     [BDB_ADD_LDFLAG=" -ldb"; AC_DEFINE(HAVE_BDB, 1, [Define HAVE_BDB if berkeley DB is installed])], 
		     [libdb="no"]
		     )
	AC_SUBST(BDB_ADD_LDFLAG)
   fi
fi

libldap="yes"
AC_ARG_WITH(ldap,
[  --with-ldap        Where to find LDAP libraries ],
[ case "$withval" in
    yes)
         libldap="yes"
    ;;
    no )
         libldap="no"
    ;;
    * )
        libldap=$withval
    ;;
  esac
],
)

if test a"$libldap" != "ano"; then
   if test a"$libldap" != "ayes"; then
        OLDCFLAGS=$CFLAGS
        OLDLDFLAGS=$LDFLAGS
        CFLAGS="$CFLAGS -I$libldap/include"
        LDFLAGS="$LDFLAGS -L $libldap/lib" 
        AC_CHECK_LIB(ldap,  ldap_search_ext_s,
                     [LDAP_ADD_LDFLAG="-L$libldap/lib -lldap"; LDAP_ADD_FLAG="-I$libldap/include"; AC_DEFINE(HAVE_LDAP, 1, [Define HAVE_LDAP if LDAP libraries are installed])],
                     [libldap="no"]
                     )
        CFLAGS=$OLDCFLAGS
        LDFLAGS=$OLDLDFLAGS
        AC_SUBST(LDAP_ADD_LDFLAG)
        AC_SUBST(LDAP_ADD_FLAG)
   else
        AC_CHECK_LIB(ldap,  ldap_search_ext_s,
                     [LDAP_ADD_LDFLAG=" -lldap"; AC_DEFINE(HAVE_LDAP, 1, [Define HAVE_LDAP if LDAP libraries are installed])],
                     [libldap="no"]
                     )
        AC_SUBST(LDAP_ADD_LDFLAG)
   fi
fi

# Check for header files
AC_HEADER_STDC
AC_CHECK_HEADERS(strings.h unistd.h sys/stat.h)
SYS_TYPES_H="0"
AC_CHECK_HEADERS(sys/types.h,
[AC_DEFINE(HAVE_SYS_TYPES_H,1,[Define HAVE_SYS_TYPES_H if you have the <sys/types.h> header file.])
SYS_TYPES_H="1"
]
)
AC_SUBST(SYS_TYPES_H)

INTTYPES_H="0"
AC_CHECK_HEADERS(inttypes.h,
[AC_DEFINE(HAVE_INTTYPES_H,1,[Define HAVE_INTTYPES_H if you have the <inttypes.h> header file.])
INTTYPES_H="1"
]
)
AC_SUBST(INTTYPES_H)

#sysv ipc
SYSV_IPC="0"
AC_CHECK_HEADERS(sys/ipc.h,
[AC_DEFINE(HAVE_SYSV_IPC,1,[Define HAVE_SYSV_IPC if sys/ipc.h exists (maybe more tests needed)])
SYSV_IPC="1"
]
)
AC_SUBST(SYSV_IPC)

AC_CHECK_HEADERS(regex.h,
AC_DEFINE(HAVE_REGEX,1,[Define HAVE_REGEX if regex.h exists (posix regular expressions - maybe more tests needed)])
USE_REGEX=1
)
AC_SUBST(USE_REGEX)

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
DEFINE_SIZE_T="0"
AC_CHECK_TYPE(size_t,,[DEFINE_SIZE_T="1"])
AC_SUBST(DEFINE_SIZE_T)
DEFINE_OFF_T="0"
AC_CHECK_TYPE(off_t,,[DEFINE_OFF_T="1"])
AC_SUBST(DEFINE_OFF_T)
AC_CHECK_SIZEOF(off_t)
DEFINE_SIZE_OFF_T=$ac_cv_sizeof_off_t
AC_SUBST(DEFINE_SIZE_OFF_T)
AC_CHECK_SIZEOF(void *)

# if I am not wrong for every 32bit and 64bit machine, 'short' is always 16bit, 'int' is 32bit
# and long is 32bit or 64bit respectively.
DEFINE_UINT8="0"
AC_CHECK_TYPE(uint8_t,,[DEFINE_UINT8="1"])
AC_SUBST(DEFINE_UINT8)
DEFINE_UINT16="0"
AC_CHECK_TYPE(uint16_t,,[DEFINE_UINT16="1"])
AC_SUBST(DEFINE_UINT16)

DEFINE_UINT32="0"
AC_CHECK_TYPE(uint32_t,,[DEFINE_UINT32="1"])
AC_SUBST(DEFINE_UINT32)

# Checks for library functions.

#Here we are changing the LIBS variable and save the current value to OLD_LIBS variable
OLD_LIBS="$LIBS"
LIBS="$LIBS $TEST_LIBS"

#AC_FUNC_VPRINTF
AC_CHECK_FUNCS(inet_aton,
AC_DEFINE(HAVE_INET_ATON,1,[Define HAVE_INET_ATON if inet_aton exists])
)

POSIX_MAPPED_FILES="0"
AC_CHECK_FUNCS(mmap munmap,
[AC_DEFINE(HAVE_POSIX_MAPPED_FILES,1,[Define HAVE_POSIX_MAPPED_FILES if mmap and munmap exists])
POSIX_MAPPED_FILES="1"
]
)
AC_SUBST(POSIX_MAPPED_FILES)

dnl Checking if union semun exists in this system.
AC_MSG_CHECKING([if union semun defined])
AC_TRY_COMPILE(
[
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/sem.h>
], 
[union semun a_semun;],
AC_DEFINE(HAVE_UNION_SEMUN,1,[Define HAVE_UNION_SEMUN if union semun defined in ipc])
AC_MSG_RESULT(yes), 
AC_MSG_RESULT(no),
)

dnl Checking if interprocess posix semaphores works....
POSIX_SEMAPHORES="0"
AC_MSG_CHECKING(if posix 1003.1b interprocess semaphores works)
AC_TRY_RUN(
[
#include <semaphore.h>
#include <sys/wait.h>

int main(int argc,char **argv){
      sem_t s;
      pid_t pid;
      int status;
      if(sem_init(&s,1,1)!=0){
        return -1;
      }
     if((pid=fork())==0){
	  if(sem_post(&s)<0){
	       exit(-1);
	  }
	  exit(0);
     }
     else{
	waitpid(pid,&status,0);
	if(WEXITSTATUS(status)!=0)
	       exit(-1);
     }
      sem_destroy(&s);
      exit(0);
}
],
AC_DEFINE(HAVE_POSIX_SEMAPHORES,1,[Define HAVE_POSIX_SEMAPHORES if posix 1003.1b semaphores works])
POSIX_SEMAPHORES="1"
AC_MSG_RESULT(yes),
AC_MSG_RESULT(no)
)
AC_SUBST(POSIX_SEMAPHORES)

dnl Checking for file locking
POSIX_FILE_LOCK="0"
AC_MSG_CHECKING(if fcntl file locking works)	
AC_TRY_RUN(
[
#include <unistd.h>
#include <fcntl.h>


int main(int argc,char **argv){
     struct flock fl;
     int fd;

     fd=open("autoconf.h.in",O_RDWR);

     fl.l_type=F_WRLCK;
     fl.l_whence=SEEK_SET;
     fl.l_start=0;
     fl.l_len=0;

     if(fcntl(fd,F_SETLKW,&fl)<0){
         close(fd);
          return -1;
    }
     close(fd);
     return 0;
}
],
AC_DEFINE(HAVE_POSIX_FILE_LOCK,1,[Define HAVE_POSIX_FILE_LOCK if posix fcntl file locking works])
POSIX_FILE_LOCK="1"
AC_MSG_RESULT(yes),
AC_MSG_RESULT(no)
)
AC_SUBST(POSIX_FILE_LOCK)

#pthread_rwlock
PTHREADS_RWLOCK="0"
AC_MSG_CHECKING([if have pthread_rwlock])
AC_TRY_COMPILE(
[#include <pthread.h>], 
[pthread_rwlock_t lock;],
AC_DEFINE(HAVE_PTHREADS_RWLOCK,1,[Define HAVE_PTHREADS_RWLOCK if pthreads library supports rwlocks])
PTHREADS_RWLOCK="1"
AC_MSG_RESULT(yes), 
AC_MSG_RESULT(no),
)
AC_SUBST(PTHREADS_RWLOCK)

#We are pouting back real LIBS variable
LIBS=$OLD_LIBS

#general parameters
AM_CONDITIONAL(ISCYGWIN,[test a"$iscygwin" != a])

# Now determine which modules will going to build .....

AM_CONDITIONAL(USEPERL,[test a"$perlcore" != a])
AM_CONDITIONAL(USEBDB,   [test a"$libdb" != ano])
AM_CONDITIONAL(USELDAP, [test a"$libldap" != ano])

AC_OUTPUT([
include/c-icap-conf.h Makefile c-icap.conf utils/Makefile services/Makefile 
services/echo/Makefile modules/Makefile tests/Makefile 
docs/Makefile docs/man/Makefile
])

