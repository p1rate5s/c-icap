#
# To enable url_check service in c-icap, copy this file in c-icap
# configuration directory and add the following line at the end of 
# c-icap.conf file:
#      Include srv_url_check.conf
#

# Module: srv_url_check
# Description:
#	This is an URL blacklist/whitelist icap service
# Example:
#	Service url_check_module srv_url_check.so

Service url_check_module srv_url_check.so

# TAG: url_check.LookupTableDB
# Format: url_check.LookupTableDB DBName type lookup_table_path
# Description:
#	DBName is a a name for this database
#	type can be one of the following:
#	     host: defines a hostnames database. Matches if the hostname
#	     	   exist in ths database.
#		   
#	     url: defines a URL's database. Matches if a part of the
#	     	  http url exist in this database.
#		  For example the  www.site.com/to/path/page.html matches if any
#		  of the following exist in this database:
#		     www.site.com/to/path/page.html
#		     www.site.com/to/path/
#		     www.site.com/to/
#		     www.site.com/
#		     site.com/to/path/page.html
#		     site.com/to/path/
#		     site.com/to/
#		     site.com/
#		     com/to/path/page.html
#		     com/to/path/
#		     com/to/
#		     com/www.site.com/to/path/page.html
#		     www.site.com/to/path/
#		     www.site.com/to/
#		     www.site.com/
#		     site.com/to/path/page.html
#		     site.com/to/path/
#		     site.com/to/
#		     site.com/
#		     com/to/path/page.html
#		     com/to/path/
#		     com/to/
#		     com/
#		     
#	     full_url: it defines a URL's database. Matches if the exact
#	     	       url exist in this database.
#		       
#	     domain: defines a domain names database. Matches if http 
#	     	     server hostname belongs to a domain which exists 
#		     in this database.http
#	lookup_table_path is a lookup table definition which contains
#	keys of the defined type
# Default:
#	None set
# Example:
#	url_check.LookupTableDB  denyhosts host hash:/usr/local/c-icap/etc/denyhosts.txt

# TAG: url_check.LoadSquidGuardDB
# Format: url_check.LoadSquidGuardDB DBName SquidGuardDBPath
# Description:
#	Defines a squidGuard database. A such database normaly contains
#	one domain and one urls database, and checked with the same way
#	the squidGuard use it.
#	DBName is the database name
#	SquidGuardDBPath is the path of the database.
# Default:
#	None set
# Example:
#	url_check.LoadSquidGuardDB porn /usr/local/blacklists-toulouse/porn/

# TAG: url_check.Profile
# Format: url_check.Profile ProfileName pass|block DBName|ALL
# Description:
#	It is used to define policy profiles. The use of "default" as
#	ProfileName is reserved and defines a default policy for all 
#	requests for which no profile defined
# Default:
#	None set
# Example:
#	url_check.Profile BlockPorn block porn
#	url_check.Profile default pass ALL
url_check.Profile default pass ALL

# TAG: url_check.ProfileAccess
# Format: url_check.ProfileAccess ProfileName [!]acl1 ...
# Description:
#	It is used to select  policy profile to apply based on acls
# Default:
#	None set
# Example:
#	acl Foo group foo
#	url_check.ProfileAccess BlockPorn Foo

# End module: srv_url_check